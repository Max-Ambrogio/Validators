{"version":3,"sources":["validations.js"],"names":["Validations","applyValidators","document","querySelectorAll","forEach","element","keys","dataset","validate","split","console","log","key","RequiredValidator","MinLengthValidator","MaxLengthValidator","EmailValidator","PhoneValidator","ConfirmationValidator"],"mappings":";;;;;;;;IAAMA,W;AACF,yBAAc;AAAA;;AACV,SAAKC,eAAL;AACH;;;;WAED,2BAAkB;AACdC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,iBAA1B,EAA6CC,OAA7C,CAAqD,UAACC,OAAD,EAAa;AAC9D,YAAMC,IAAI,GAAGD,OAAO,CAACE,OAAR,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,CAAb;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,IAApC;AACAA,QAAAA,IAAI,CAACF,OAAL,CAAa,UAACQ,GAAD,EAAS;AAClB,kBAAQA,GAAR;AACI,iBAAK,UAAL;AACI,kBAAIC,iBAAJ,CAAsBR,OAAtB,EAA+BA,OAAO,CAACE,OAAvC;AACA;;AACJ,iBAAK,YAAL;AACI,kBAAIO,kBAAJ,CAAuBT,OAAvB,EAAgCA,OAAO,CAACE,OAAxC;AACA;;AACJ,iBAAK,YAAL;AACI,kBAAIQ,kBAAJ,CAAuBV,OAAvB,EAAgCA,OAAO,CAACE,OAAxC;AACA;;AACJ,iBAAK,OAAL;AACI,kBAAIS,cAAJ,CAAmBX,OAAnB,EAA4BA,OAAO,CAACE,OAApC;AACA;;AACJ,iBAAK,OAAL;AACI,kBAAIU,cAAJ,CAAmBZ,OAAnB,EAA4BA,OAAO,CAACE,OAApC;AACA;;AACJ,iBAAK,cAAL;AACI,kBAAIW,qBAAJ,CAA0Bb,OAA1B,EAAmCA,OAAO,CAACE,OAA3C;AACA;AAlBR;AAqBH,SAtBD;AAuBH,OA1BD;AA2BH","sourcesContent":["class Validations {\r\n    constructor() {\r\n        this.applyValidators()\r\n    }\r\n\r\n    applyValidators() {\r\n        document.querySelectorAll(\"[data-validate]\").forEach((element) => {\r\n            const keys = element.dataset.validate.split(\" \")\r\n            console.log(\"validating with keys\", keys)\r\n            keys.forEach((key) => {\r\n                switch (key) {\r\n                    case 'required':\r\n                        new RequiredValidator(element, element.dataset)\r\n                        break\r\n                    case 'min-length':\r\n                        new MinLengthValidator(element, element.dataset)\r\n                        break \r\n                    case 'max-length':\r\n                        new MaxLengthValidator(element, element.dataset)\r\n                        break\r\n                    case 'email':\r\n                        new EmailValidator(element, element.dataset)\r\n                        break\r\n                    case 'phone':\r\n                        new PhoneValidator(element, element.dataset)\r\n                        break\r\n                    case 'confirmation':\r\n                        new ConfirmationValidator(element, element.dataset)\r\n                        break\r\n                \r\n                }\r\n            })\r\n        })\r\n    }\r\n}"],"file":"validations.js"}