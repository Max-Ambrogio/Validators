{"version":3,"sources":["validators/max-length.js"],"names":["MaxLengthValidator","changedValue","console","log","maxLength","parseInt","options","isValid","length","removeError","addError","BaseValidator"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA,kB;;;;;;;;;;;;;;;;+DACS,UAACC,YAAD,EAAkB;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,YAAvC;AACA,UAAMG,SAAS,GAAGC,QAAQ,CAAC,MAAKC,OAAL,CAAaF,SAAd,CAA1B;AACA,UAAMG,OAAO,GAAGN,YAAY,CAACO,MAAb,IAAuBJ,SAAvC;;AACA,UAAGG,OAAH,EAAY;AACR,cAAKE,WAAL,CAAiB,YAAjB;AACH,OAFD,MAEO;AACH,cAAKC,QAAL,CAAc,YAAd,EAA4B,oBAA5B;AACH;;AAED,aAAOH,OAAP;AACH,K;;;;;;EAZ4BI,a","sourcesContent":["class MaxLengthValidator extends BaseValidator {\r\n    validate = (changedValue) => {\r\n        console.log('checking for max length', changedValue)\r\n        const maxLength = parseInt(this.options.maxLength)\r\n        const isValid = changedValue.length <= maxLength\r\n        if(isValid) {\r\n            this.removeError('max-length')\r\n        } else {\r\n            this.addError('max-length', \"value is too long.\")\r\n        }\r\n\r\n        return isValid\r\n    }\r\n}"],"file":"max-length.js"}